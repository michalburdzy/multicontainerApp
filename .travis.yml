language: generic
os: linux
dist: xenial

services:
  - docker
cache:
  directories:
    - $HOME/google-cloud-sdk
env:
  global:
    - GIT_SHA=$(git rev-parse HEAD)
    - CLOUDSDK_CORE_DISABLE_PROMPTS=1

branches:
  only:
    - kubernetes

before_install:
  - openssl aes-256-cbc -K $encrypted_9f3b5599b056_key -iv $encrypted_9f3b5599b056_iv -in service-account.json.enc -out service-account.json -d
  - rm -rf $HOME/google-cloud-sdk;
  - curl https://sdk.cloud.google.com | bash > /dev/null;
  - source $HOME/google-cloud-sdk/path.bash.inc
  - gcloud components update kubectl
  - gcloud version
  - gcloud auth activate-service-account --key-file service-account.json
  - gcloud config set project multicontainer-kubernetes
  - gcloud config set compute/zone europe-west3-c
  - gcloud container clusters get-credentials multicontainer-cluster

  # build :latest images
  - docker build -t mmicalt/multicontainer_api_getter:latest -f./api_getter/Dockerfile ./api_getter
  - docker build -t mmicalt/multicontainer_api_setter:latest -f./api_setter/Dockerfile ./api_setter
  - docker build -t mmicalt/multicontainer_api_getter:latest -f./api_getter/Dockerfile ./api_getter
  - docker build -t mmicalt/multicontainer_client:latest   -f./client/Dockerfile.dev ./client

script:
  - docker run -e CI=true mmicalt/multicontainer_api_getter:latest npm run test
  - docker run -e CI=true mmicalt/multicontainer_api_setter:latest npm run test
  - docker run -e CI=true mmicalt/multicontainer_client npm:latest run test

after_success:
  - echo "$DOCKER_PASSWORD" | docker login -u $DOCKER_ID --password-stdin

  - docker push mmicalt/multicontainer_api_getter:latest
  - docker push mmicalt/multicontainer_api_setter:latest
  - docker push mmicalt/multicontainer_api_worker:latest
  - docker push mmicalt/multicontainer_client:latest

deploy:
  provider: script
  script: bash ./deployment.sh
  on:
    branch: kubernetes
